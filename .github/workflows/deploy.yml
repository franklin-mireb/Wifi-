# 🚀 Déploiement Automatique WiFi Manager
name: 🚀 Deploy WiFi Manager

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # 🧪 Tests
  test:
    name: 🧪 Tests & Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: 📦 Checkout Code
      uses: actions/checkout@v4

    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: 📋 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest

    - name: 🧪 Run Tests
      run: |
        python -m pytest test_app.py -v
        python -m pytest test_voucher_system.py -v

    - name: 🔍 Code Quality Check
      run: |
        python -c "import app; print('✅ App imports successfully')"
        python -c "import voucher_system; print('✅ Voucher system imports successfully')"

  # 🏗️ Build
  build:
    name: 🏗️ Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write

    steps:
    - name: 📦 Checkout Code
      uses: actions/checkout@v4

    - name: 🔐 Login to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: 📝 Extract Metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha
          type=raw,value=latest,enable={{is_default_branch}}

    - name: 🏗️ Build and Push Image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  # 🚀 Deploy to Production
  deploy:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/main'
    environment: production

    steps:
    - name: 📦 Checkout Code
      uses: actions/checkout@v4

    - name: 🚀 Deploy to Server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd /opt/wifi-manager
          git pull origin main
          docker-compose -f docker-compose.prod.yml pull
          docker-compose -f docker-compose.prod.yml up -d
          docker system prune -f

  # 📊 Health Check
  health-check:
    name: 📊 Health Check
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main'

    steps:
    - name: 🔍 Check Application Health
      run: |
        # Attendre que l'application démarre
        sleep 30
        
        # Test de santé
        response=$(curl -s -o /dev/null -w "%{http_code}" ${{ secrets.APP_URL }}/health || echo "000")
        
        if [ "$response" = "200" ]; then
          echo "✅ Application is healthy!"
        else
          echo "❌ Application health check failed (HTTP $response)"
          exit 1
        fi

    - name: 📱 Notification Success
      if: success()
      run: |
        echo "🎉 WiFi Manager déployé avec succès!"
        echo "🌐 Application: ${{ secrets.APP_URL }}"
        echo "🎫 Vouchers: ${{ secrets.APP_URL }}/vouchers"
